//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace S3GBusEntity.Insurance {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InsuranceMgtServices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InsuranceMgtServices : global::System.Data.DataSet {
        
        private S3G_INS_AssetInsuranceEntryDataTable tableS3G_INS_AssetInsuranceEntry;
        
        private S3G_INS_AssetInsuranceClaimDataTable tableS3G_INS_AssetInsuranceClaim;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InsuranceMgtServices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected InsuranceMgtServices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["S3G_INS_AssetInsuranceEntry"] != null)) {
                    base.Tables.Add(new S3G_INS_AssetInsuranceEntryDataTable(ds.Tables["S3G_INS_AssetInsuranceEntry"]));
                }
                if ((ds.Tables["S3G_INS_AssetInsuranceClaim"] != null)) {
                    base.Tables.Add(new S3G_INS_AssetInsuranceClaimDataTable(ds.Tables["S3G_INS_AssetInsuranceClaim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_INS_AssetInsuranceEntryDataTable S3G_INS_AssetInsuranceEntry {
            get {
                return this.tableS3G_INS_AssetInsuranceEntry;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_INS_AssetInsuranceClaimDataTable S3G_INS_AssetInsuranceClaim {
            get {
                return this.tableS3G_INS_AssetInsuranceClaim;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InsuranceMgtServices cln = ((InsuranceMgtServices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["S3G_INS_AssetInsuranceEntry"] != null)) {
                    base.Tables.Add(new S3G_INS_AssetInsuranceEntryDataTable(ds.Tables["S3G_INS_AssetInsuranceEntry"]));
                }
                if ((ds.Tables["S3G_INS_AssetInsuranceClaim"] != null)) {
                    base.Tables.Add(new S3G_INS_AssetInsuranceClaimDataTable(ds.Tables["S3G_INS_AssetInsuranceClaim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableS3G_INS_AssetInsuranceEntry = ((S3G_INS_AssetInsuranceEntryDataTable)(base.Tables["S3G_INS_AssetInsuranceEntry"]));
            if ((initTable == true)) {
                if ((this.tableS3G_INS_AssetInsuranceEntry != null)) {
                    this.tableS3G_INS_AssetInsuranceEntry.InitVars();
                }
            }
            this.tableS3G_INS_AssetInsuranceClaim = ((S3G_INS_AssetInsuranceClaimDataTable)(base.Tables["S3G_INS_AssetInsuranceClaim"]));
            if ((initTable == true)) {
                if ((this.tableS3G_INS_AssetInsuranceClaim != null)) {
                    this.tableS3G_INS_AssetInsuranceClaim.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InsuranceMgtServices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InsuranceMgtServices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableS3G_INS_AssetInsuranceEntry = new S3G_INS_AssetInsuranceEntryDataTable();
            base.Tables.Add(this.tableS3G_INS_AssetInsuranceEntry);
            this.tableS3G_INS_AssetInsuranceClaim = new S3G_INS_AssetInsuranceClaimDataTable();
            base.Tables.Add(this.tableS3G_INS_AssetInsuranceClaim);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeS3G_INS_AssetInsuranceEntry() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeS3G_INS_AssetInsuranceClaim() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InsuranceMgtServices ds = new InsuranceMgtServices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void S3G_INS_AssetInsuranceEntryRowChangeEventHandler(object sender, S3G_INS_AssetInsuranceEntryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void S3G_INS_AssetInsuranceClaimRowChangeEventHandler(object sender, S3G_INS_AssetInsuranceClaimRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_INS_AssetInsuranceEntryDataTable : global::System.Data.TypedTableBase<S3G_INS_AssetInsuranceEntryRow> {
            
            private global::System.Data.DataColumn columnAccount_Ins_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLOB_ID;
            
            private global::System.Data.DataColumn columnBranch_ID;
            
            private global::System.Data.DataColumn columnCustomer_ID;
            
            private global::System.Data.DataColumn columnPANum;
            
            private global::System.Data.DataColumn columnSANum;
            
            private global::System.Data.DataColumn columnIns_Done_By;
            
            private global::System.Data.DataColumn columnIns_Company_Name;
            
            private global::System.Data.DataColumn columnIns_Company_Address;
            
            private global::System.Data.DataColumn columnPay_Type;
            
            private global::System.Data.DataColumn columnInstallment_From_Date;
            
            private global::System.Data.DataColumn columnInstallment_To_Date;
            
            private global::System.Data.DataColumn columnAccount_Link_Key;
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnXmlPolicyDetails;
            
            private global::System.Data.DataColumn columnIns_Company_Address2;
            
            private global::System.Data.DataColumn columnIns_Company_City;
            
            private global::System.Data.DataColumn columnIns_Company_State;
            
            private global::System.Data.DataColumn columnIns_Company_Pin;
            
            private global::System.Data.DataColumn columnIns_Company_Country;
            
            private global::System.Data.DataColumn columnIns_Company_Telephone;
            
            private global::System.Data.DataColumn columnIns_Company_Mobile;
            
            private global::System.Data.DataColumn columnIns_Company_Email_ID;
            
            private global::System.Data.DataColumn columnIns_Company_Web_Site;
            
            private global::System.Data.DataColumn columnIns_Company_Id;
            
            private global::System.Data.DataColumn columnInsurance_Type;
            
            private global::System.Data.DataColumn columnTranche_No;
            
            private global::System.Data.DataColumn columnRS_No;
            
            private global::System.Data.DataColumn columnXmlInvoiceDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryDataTable() {
                this.TableName = "S3G_INS_AssetInsuranceEntry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal S3G_INS_AssetInsuranceEntryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected S3G_INS_AssetInsuranceEntryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Account_Ins_IDColumn {
                get {
                    return this.columnAccount_Ins_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOB_IDColumn {
                get {
                    return this.columnLOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Branch_IDColumn {
                get {
                    return this.columnBranch_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Customer_IDColumn {
                get {
                    return this.columnCustomer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PANumColumn {
                get {
                    return this.columnPANum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SANumColumn {
                get {
                    return this.columnSANum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Done_ByColumn {
                get {
                    return this.columnIns_Done_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_NameColumn {
                get {
                    return this.columnIns_Company_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_AddressColumn {
                get {
                    return this.columnIns_Company_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Pay_TypeColumn {
                get {
                    return this.columnPay_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Installment_From_DateColumn {
                get {
                    return this.columnInstallment_From_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Installment_To_DateColumn {
                get {
                    return this.columnInstallment_To_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Account_Link_KeyColumn {
                get {
                    return this.columnAccount_Link_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XmlPolicyDetailsColumn {
                get {
                    return this.columnXmlPolicyDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_Address2Column {
                get {
                    return this.columnIns_Company_Address2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_CityColumn {
                get {
                    return this.columnIns_Company_City;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_StateColumn {
                get {
                    return this.columnIns_Company_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_PinColumn {
                get {
                    return this.columnIns_Company_Pin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_CountryColumn {
                get {
                    return this.columnIns_Company_Country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_TelephoneColumn {
                get {
                    return this.columnIns_Company_Telephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_MobileColumn {
                get {
                    return this.columnIns_Company_Mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_Email_IDColumn {
                get {
                    return this.columnIns_Company_Email_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_Web_SiteColumn {
                get {
                    return this.columnIns_Company_Web_Site;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Company_IdColumn {
                get {
                    return this.columnIns_Company_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Insurance_TypeColumn {
                get {
                    return this.columnInsurance_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tranche_NoColumn {
                get {
                    return this.columnTranche_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RS_NoColumn {
                get {
                    return this.columnRS_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XmlInvoiceDetailsColumn {
                get {
                    return this.columnXmlInvoiceDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRow this[int index] {
                get {
                    return ((S3G_INS_AssetInsuranceEntryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceEntryRowChangeEventHandler S3G_INS_AssetInsuranceEntryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceEntryRowChangeEventHandler S3G_INS_AssetInsuranceEntryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceEntryRowChangeEventHandler S3G_INS_AssetInsuranceEntryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceEntryRowChangeEventHandler S3G_INS_AssetInsuranceEntryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddS3G_INS_AssetInsuranceEntryRow(S3G_INS_AssetInsuranceEntryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRow AddS3G_INS_AssetInsuranceEntryRow(
                        int Company_ID, 
                        int LOB_ID, 
                        int Branch_ID, 
                        int Customer_ID, 
                        string PANum, 
                        string SANum, 
                        string Ins_Done_By, 
                        string Ins_Company_Name, 
                        string Ins_Company_Address, 
                        int Pay_Type, 
                        System.DateTime Installment_From_Date, 
                        System.DateTime Installment_To_Date, 
                        int Account_Link_Key, 
                        string UserId, 
                        string XmlPolicyDetails, 
                        string Ins_Company_Address2, 
                        string Ins_Company_City, 
                        string Ins_Company_State, 
                        string Ins_Company_Pin, 
                        string Ins_Company_Country, 
                        string Ins_Company_Telephone, 
                        long Ins_Company_Mobile, 
                        string Ins_Company_Email_ID, 
                        string Ins_Company_Web_Site, 
                        string Ins_Company_Id, 
                        string Insurance_Type, 
                        string Tranche_No, 
                        string RS_No, 
                        string XmlInvoiceDetails) {
                S3G_INS_AssetInsuranceEntryRow rowS3G_INS_AssetInsuranceEntryRow = ((S3G_INS_AssetInsuranceEntryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_ID,
                        LOB_ID,
                        Branch_ID,
                        Customer_ID,
                        PANum,
                        SANum,
                        Ins_Done_By,
                        Ins_Company_Name,
                        Ins_Company_Address,
                        Pay_Type,
                        Installment_From_Date,
                        Installment_To_Date,
                        Account_Link_Key,
                        UserId,
                        XmlPolicyDetails,
                        Ins_Company_Address2,
                        Ins_Company_City,
                        Ins_Company_State,
                        Ins_Company_Pin,
                        Ins_Company_Country,
                        Ins_Company_Telephone,
                        Ins_Company_Mobile,
                        Ins_Company_Email_ID,
                        Ins_Company_Web_Site,
                        Ins_Company_Id,
                        Insurance_Type,
                        Tranche_No,
                        RS_No,
                        XmlInvoiceDetails};
                rowS3G_INS_AssetInsuranceEntryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_INS_AssetInsuranceEntryRow);
                return rowS3G_INS_AssetInsuranceEntryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRow FindByAccount_Ins_ID(long Account_Ins_ID) {
                return ((S3G_INS_AssetInsuranceEntryRow)(this.Rows.Find(new object[] {
                            Account_Ins_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                S3G_INS_AssetInsuranceEntryDataTable cln = ((S3G_INS_AssetInsuranceEntryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_INS_AssetInsuranceEntryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccount_Ins_ID = base.Columns["Account_Ins_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLOB_ID = base.Columns["LOB_ID"];
                this.columnBranch_ID = base.Columns["Branch_ID"];
                this.columnCustomer_ID = base.Columns["Customer_ID"];
                this.columnPANum = base.Columns["PANum"];
                this.columnSANum = base.Columns["SANum"];
                this.columnIns_Done_By = base.Columns["Ins_Done_By"];
                this.columnIns_Company_Name = base.Columns["Ins_Company_Name"];
                this.columnIns_Company_Address = base.Columns["Ins_Company_Address"];
                this.columnPay_Type = base.Columns["Pay_Type"];
                this.columnInstallment_From_Date = base.Columns["Installment_From_Date"];
                this.columnInstallment_To_Date = base.Columns["Installment_To_Date"];
                this.columnAccount_Link_Key = base.Columns["Account_Link_Key"];
                this.columnUserId = base.Columns["UserId"];
                this.columnXmlPolicyDetails = base.Columns["XmlPolicyDetails"];
                this.columnIns_Company_Address2 = base.Columns["Ins_Company_Address2"];
                this.columnIns_Company_City = base.Columns["Ins_Company_City"];
                this.columnIns_Company_State = base.Columns["Ins_Company_State"];
                this.columnIns_Company_Pin = base.Columns["Ins_Company_Pin"];
                this.columnIns_Company_Country = base.Columns["Ins_Company_Country"];
                this.columnIns_Company_Telephone = base.Columns["Ins_Company_Telephone"];
                this.columnIns_Company_Mobile = base.Columns["Ins_Company_Mobile"];
                this.columnIns_Company_Email_ID = base.Columns["Ins_Company_Email_ID"];
                this.columnIns_Company_Web_Site = base.Columns["Ins_Company_Web_Site"];
                this.columnIns_Company_Id = base.Columns["Ins_Company_Id"];
                this.columnInsurance_Type = base.Columns["Insurance_Type"];
                this.columnTranche_No = base.Columns["Tranche_No"];
                this.columnRS_No = base.Columns["RS_No"];
                this.columnXmlInvoiceDetails = base.Columns["XmlInvoiceDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccount_Ins_ID = new global::System.Data.DataColumn("Account_Ins_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Ins_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLOB_ID = new global::System.Data.DataColumn("LOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB_ID);
                this.columnBranch_ID = new global::System.Data.DataColumn("Branch_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch_ID);
                this.columnCustomer_ID = new global::System.Data.DataColumn("Customer_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_ID);
                this.columnPANum = new global::System.Data.DataColumn("PANum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPANum);
                this.columnSANum = new global::System.Data.DataColumn("SANum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANum);
                this.columnIns_Done_By = new global::System.Data.DataColumn("Ins_Done_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Done_By);
                this.columnIns_Company_Name = new global::System.Data.DataColumn("Ins_Company_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Name);
                this.columnIns_Company_Address = new global::System.Data.DataColumn("Ins_Company_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Address);
                this.columnPay_Type = new global::System.Data.DataColumn("Pay_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_Type);
                this.columnInstallment_From_Date = new global::System.Data.DataColumn("Installment_From_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallment_From_Date);
                this.columnInstallment_To_Date = new global::System.Data.DataColumn("Installment_To_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallment_To_Date);
                this.columnAccount_Link_Key = new global::System.Data.DataColumn("Account_Link_Key", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Link_Key);
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnXmlPolicyDetails = new global::System.Data.DataColumn("XmlPolicyDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXmlPolicyDetails);
                this.columnIns_Company_Address2 = new global::System.Data.DataColumn("Ins_Company_Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Address2);
                this.columnIns_Company_City = new global::System.Data.DataColumn("Ins_Company_City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_City);
                this.columnIns_Company_State = new global::System.Data.DataColumn("Ins_Company_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_State);
                this.columnIns_Company_Pin = new global::System.Data.DataColumn("Ins_Company_Pin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Pin);
                this.columnIns_Company_Country = new global::System.Data.DataColumn("Ins_Company_Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Country);
                this.columnIns_Company_Telephone = new global::System.Data.DataColumn("Ins_Company_Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Telephone);
                this.columnIns_Company_Mobile = new global::System.Data.DataColumn("Ins_Company_Mobile", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Mobile);
                this.columnIns_Company_Email_ID = new global::System.Data.DataColumn("Ins_Company_Email_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Email_ID);
                this.columnIns_Company_Web_Site = new global::System.Data.DataColumn("Ins_Company_Web_Site", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Web_Site);
                this.columnIns_Company_Id = new global::System.Data.DataColumn("Ins_Company_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Company_Id);
                this.columnInsurance_Type = new global::System.Data.DataColumn("Insurance_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsurance_Type);
                this.columnTranche_No = new global::System.Data.DataColumn("Tranche_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranche_No);
                this.columnRS_No = new global::System.Data.DataColumn("RS_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRS_No);
                this.columnXmlInvoiceDetails = new global::System.Data.DataColumn("XmlInvoiceDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXmlInvoiceDetails);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccount_Ins_ID}, true));
                this.columnAccount_Ins_ID.AutoIncrement = true;
                this.columnAccount_Ins_ID.AutoIncrementSeed = -1;
                this.columnAccount_Ins_ID.AutoIncrementStep = -1;
                this.columnAccount_Ins_ID.AllowDBNull = false;
                this.columnAccount_Ins_ID.ReadOnly = true;
                this.columnAccount_Ins_ID.Unique = true;
                this.columnCompany_ID.AllowDBNull = false;
                this.columnLOB_ID.AllowDBNull = false;
                this.columnBranch_ID.AllowDBNull = false;
                this.columnCustomer_ID.AllowDBNull = false;
                this.columnPANum.AllowDBNull = false;
                this.columnPANum.MaxLength = 50;
                this.columnSANum.MaxLength = 50;
                this.columnIns_Done_By.MaxLength = 50;
                this.columnIns_Company_Name.MaxLength = 50;
                this.columnIns_Company_Address.AllowDBNull = false;
                this.columnIns_Company_Address.MaxLength = 100;
                this.columnIns_Company_City.AllowDBNull = false;
                this.columnIns_Company_State.AllowDBNull = false;
                this.columnIns_Company_Pin.AllowDBNull = false;
                this.columnIns_Company_Country.AllowDBNull = false;
                this.columnIns_Company_Telephone.AllowDBNull = false;
                this.columnIns_Company_Email_ID.AllowDBNull = false;
                this.columnIns_Company_Web_Site.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRow NewS3G_INS_AssetInsuranceEntryRow() {
                return ((S3G_INS_AssetInsuranceEntryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_INS_AssetInsuranceEntryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_INS_AssetInsuranceEntryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_INS_AssetInsuranceEntryRowChanged != null)) {
                    this.S3G_INS_AssetInsuranceEntryRowChanged(this, new S3G_INS_AssetInsuranceEntryRowChangeEvent(((S3G_INS_AssetInsuranceEntryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_INS_AssetInsuranceEntryRowChanging != null)) {
                    this.S3G_INS_AssetInsuranceEntryRowChanging(this, new S3G_INS_AssetInsuranceEntryRowChangeEvent(((S3G_INS_AssetInsuranceEntryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_INS_AssetInsuranceEntryRowDeleted != null)) {
                    this.S3G_INS_AssetInsuranceEntryRowDeleted(this, new S3G_INS_AssetInsuranceEntryRowChangeEvent(((S3G_INS_AssetInsuranceEntryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_INS_AssetInsuranceEntryRowDeleting != null)) {
                    this.S3G_INS_AssetInsuranceEntryRowDeleting(this, new S3G_INS_AssetInsuranceEntryRowChangeEvent(((S3G_INS_AssetInsuranceEntryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveS3G_INS_AssetInsuranceEntryRow(S3G_INS_AssetInsuranceEntryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsuranceMgtServices ds = new InsuranceMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_INS_AssetInsuranceEntryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_INS_AssetInsuranceClaimDataTable : global::System.Data.TypedTableBase<S3G_INS_AssetInsuranceClaimRow> {
            
            private global::System.Data.DataColumn columnIns_Claim_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLOB_ID;
            
            private global::System.Data.DataColumn columnBranch_ID;
            
            private global::System.Data.DataColumn columnCustomer_ID;
            
            private global::System.Data.DataColumn columnICN_No;
            
            private global::System.Data.DataColumn columnICN_Date;
            
            private global::System.Data.DataColumn columnPANum;
            
            private global::System.Data.DataColumn columnSANum;
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnIs_Active;
            
            private global::System.Data.DataColumn columnXmlPolicyClaimDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimDataTable() {
                this.TableName = "S3G_INS_AssetInsuranceClaim";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal S3G_INS_AssetInsuranceClaimDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected S3G_INS_AssetInsuranceClaimDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ins_Claim_IDColumn {
                get {
                    return this.columnIns_Claim_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOB_IDColumn {
                get {
                    return this.columnLOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Branch_IDColumn {
                get {
                    return this.columnBranch_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Customer_IDColumn {
                get {
                    return this.columnCustomer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICN_NoColumn {
                get {
                    return this.columnICN_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICN_DateColumn {
                get {
                    return this.columnICN_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PANumColumn {
                get {
                    return this.columnPANum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SANumColumn {
                get {
                    return this.columnSANum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Is_ActiveColumn {
                get {
                    return this.columnIs_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XmlPolicyClaimDetailsColumn {
                get {
                    return this.columnXmlPolicyClaimDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRow this[int index] {
                get {
                    return ((S3G_INS_AssetInsuranceClaimRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceClaimRowChangeEventHandler S3G_INS_AssetInsuranceClaimRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceClaimRowChangeEventHandler S3G_INS_AssetInsuranceClaimRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceClaimRowChangeEventHandler S3G_INS_AssetInsuranceClaimRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event S3G_INS_AssetInsuranceClaimRowChangeEventHandler S3G_INS_AssetInsuranceClaimRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddS3G_INS_AssetInsuranceClaimRow(S3G_INS_AssetInsuranceClaimRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRow AddS3G_INS_AssetInsuranceClaimRow(int Company_ID, int LOB_ID, int Branch_ID, int Customer_ID, string ICN_No, System.DateTime ICN_Date, string PANum, string SANum, string UserId, bool Is_Active, string XmlPolicyClaimDetails) {
                S3G_INS_AssetInsuranceClaimRow rowS3G_INS_AssetInsuranceClaimRow = ((S3G_INS_AssetInsuranceClaimRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_ID,
                        LOB_ID,
                        Branch_ID,
                        Customer_ID,
                        ICN_No,
                        ICN_Date,
                        PANum,
                        SANum,
                        UserId,
                        Is_Active,
                        XmlPolicyClaimDetails};
                rowS3G_INS_AssetInsuranceClaimRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_INS_AssetInsuranceClaimRow);
                return rowS3G_INS_AssetInsuranceClaimRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRow FindByIns_Claim_ID(int Ins_Claim_ID) {
                return ((S3G_INS_AssetInsuranceClaimRow)(this.Rows.Find(new object[] {
                            Ins_Claim_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                S3G_INS_AssetInsuranceClaimDataTable cln = ((S3G_INS_AssetInsuranceClaimDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_INS_AssetInsuranceClaimDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIns_Claim_ID = base.Columns["Ins_Claim_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLOB_ID = base.Columns["LOB_ID"];
                this.columnBranch_ID = base.Columns["Branch_ID"];
                this.columnCustomer_ID = base.Columns["Customer_ID"];
                this.columnICN_No = base.Columns["ICN_No"];
                this.columnICN_Date = base.Columns["ICN_Date"];
                this.columnPANum = base.Columns["PANum"];
                this.columnSANum = base.Columns["SANum"];
                this.columnUserId = base.Columns["UserId"];
                this.columnIs_Active = base.Columns["Is_Active"];
                this.columnXmlPolicyClaimDetails = base.Columns["XmlPolicyClaimDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIns_Claim_ID = new global::System.Data.DataColumn("Ins_Claim_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIns_Claim_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLOB_ID = new global::System.Data.DataColumn("LOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB_ID);
                this.columnBranch_ID = new global::System.Data.DataColumn("Branch_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch_ID);
                this.columnCustomer_ID = new global::System.Data.DataColumn("Customer_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_ID);
                this.columnICN_No = new global::System.Data.DataColumn("ICN_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICN_No);
                this.columnICN_Date = new global::System.Data.DataColumn("ICN_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICN_Date);
                this.columnPANum = new global::System.Data.DataColumn("PANum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPANum);
                this.columnSANum = new global::System.Data.DataColumn("SANum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANum);
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnIs_Active = new global::System.Data.DataColumn("Is_Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Active);
                this.columnXmlPolicyClaimDetails = new global::System.Data.DataColumn("XmlPolicyClaimDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXmlPolicyClaimDetails);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIns_Claim_ID}, true));
                this.columnIns_Claim_ID.AutoIncrement = true;
                this.columnIns_Claim_ID.AutoIncrementSeed = -1;
                this.columnIns_Claim_ID.AutoIncrementStep = -1;
                this.columnIns_Claim_ID.AllowDBNull = false;
                this.columnIns_Claim_ID.ReadOnly = true;
                this.columnIns_Claim_ID.Unique = true;
                this.columnCompany_ID.AllowDBNull = false;
                this.columnLOB_ID.AllowDBNull = false;
                this.columnBranch_ID.AllowDBNull = false;
                this.columnCustomer_ID.AllowDBNull = false;
                this.columnICN_No.AllowDBNull = false;
                this.columnICN_No.MaxLength = 25;
                this.columnICN_Date.AllowDBNull = false;
                this.columnPANum.AllowDBNull = false;
                this.columnPANum.MaxLength = 50;
                this.columnSANum.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRow NewS3G_INS_AssetInsuranceClaimRow() {
                return ((S3G_INS_AssetInsuranceClaimRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_INS_AssetInsuranceClaimRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_INS_AssetInsuranceClaimRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_INS_AssetInsuranceClaimRowChanged != null)) {
                    this.S3G_INS_AssetInsuranceClaimRowChanged(this, new S3G_INS_AssetInsuranceClaimRowChangeEvent(((S3G_INS_AssetInsuranceClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_INS_AssetInsuranceClaimRowChanging != null)) {
                    this.S3G_INS_AssetInsuranceClaimRowChanging(this, new S3G_INS_AssetInsuranceClaimRowChangeEvent(((S3G_INS_AssetInsuranceClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_INS_AssetInsuranceClaimRowDeleted != null)) {
                    this.S3G_INS_AssetInsuranceClaimRowDeleted(this, new S3G_INS_AssetInsuranceClaimRowChangeEvent(((S3G_INS_AssetInsuranceClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_INS_AssetInsuranceClaimRowDeleting != null)) {
                    this.S3G_INS_AssetInsuranceClaimRowDeleting(this, new S3G_INS_AssetInsuranceClaimRowChangeEvent(((S3G_INS_AssetInsuranceClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveS3G_INS_AssetInsuranceClaimRow(S3G_INS_AssetInsuranceClaimRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsuranceMgtServices ds = new InsuranceMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_INS_AssetInsuranceClaimDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class S3G_INS_AssetInsuranceEntryRow : global::System.Data.DataRow {
            
            private S3G_INS_AssetInsuranceEntryDataTable tableS3G_INS_AssetInsuranceEntry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal S3G_INS_AssetInsuranceEntryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_INS_AssetInsuranceEntry = ((S3G_INS_AssetInsuranceEntryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Account_Ins_ID {
                get {
                    return ((long)(this[this.tableS3G_INS_AssetInsuranceEntry.Account_Ins_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Account_Ins_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Company_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.Company_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOB_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.LOB_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.LOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Branch_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.Branch_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Branch_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Customer_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.Customer_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Customer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PANum {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.PANumColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.PANumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SANum {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.SANumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SANum\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.SANumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Done_By {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Done_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ins_Done_By\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Done_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Name {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ins_Company_Name\' in table \'S3G_INS_AssetInsuranceEntry\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Address {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_AddressColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Pay_Type {
                get {
                    try {
                        return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.Pay_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pay_Type\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Pay_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Installment_From_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_INS_AssetInsuranceEntry.Installment_From_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Installment_From_Date\' in table \'S3G_INS_AssetInsuranceEntr" +
                                "y\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Installment_From_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Installment_To_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_INS_AssetInsuranceEntry.Installment_To_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Installment_To_Date\' in table \'S3G_INS_AssetInsuranceEntry\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Installment_To_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Account_Link_Key {
                get {
                    try {
                        return ((int)(this[this.tableS3G_INS_AssetInsuranceEntry.Account_Link_KeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Account_Link_Key\' in table \'S3G_INS_AssetInsuranceEntry\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Account_Link_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserId {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.UserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserId\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XmlPolicyDetails {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.XmlPolicyDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XmlPolicyDetails\' in table \'S3G_INS_AssetInsuranceEntry\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.XmlPolicyDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Address2 {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ins_Company_Address2\' in table \'S3G_INS_AssetInsuranceEntry" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_City {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_CityColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_State {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_StateColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Pin {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_PinColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Country {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_CountryColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Telephone {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_TelephoneColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ins_Company_Mobile {
                get {
                    try {
                        return ((long)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ins_Company_Mobile\' in table \'S3G_INS_AssetInsuranceEntry\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Email_ID {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Email_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Email_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Web_Site {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Web_SiteColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Web_SiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ins_Company_Id {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ins_Company_Id\' in table \'S3G_INS_AssetInsuranceEntry\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Insurance_Type {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Insurance_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insurance_Type\' in table \'S3G_INS_AssetInsuranceEntry\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Insurance_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tranche_No {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.Tranche_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tranche_No\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.Tranche_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RS_No {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.RS_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RS_No\' in table \'S3G_INS_AssetInsuranceEntry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.RS_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XmlInvoiceDetails {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceEntry.XmlInvoiceDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XmlInvoiceDetails\' in table \'S3G_INS_AssetInsuranceEntry\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceEntry.XmlInvoiceDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSANumNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.SANumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSANumNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.SANumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIns_Done_ByNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Ins_Done_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIns_Done_ByNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Done_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIns_Company_NameNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIns_Company_NameNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPay_TypeNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Pay_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPay_TypeNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Pay_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallment_From_DateNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Installment_From_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallment_From_DateNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Installment_From_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallment_To_DateNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Installment_To_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallment_To_DateNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Installment_To_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccount_Link_KeyNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Account_Link_KeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccount_Link_KeyNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Account_Link_KeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIdNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.UserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIdNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.UserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXmlPolicyDetailsNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.XmlPolicyDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXmlPolicyDetailsNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.XmlPolicyDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIns_Company_Address2Null() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIns_Company_Address2Null() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIns_Company_MobileNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIns_Company_MobileNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIns_Company_IdNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIns_Company_IdNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Ins_Company_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsurance_TypeNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Insurance_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsurance_TypeNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Insurance_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTranche_NoNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.Tranche_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTranche_NoNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.Tranche_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRS_NoNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.RS_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRS_NoNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.RS_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXmlInvoiceDetailsNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceEntry.XmlInvoiceDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXmlInvoiceDetailsNull() {
                this[this.tableS3G_INS_AssetInsuranceEntry.XmlInvoiceDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class S3G_INS_AssetInsuranceClaimRow : global::System.Data.DataRow {
            
            private S3G_INS_AssetInsuranceClaimDataTable tableS3G_INS_AssetInsuranceClaim;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal S3G_INS_AssetInsuranceClaimRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_INS_AssetInsuranceClaim = ((S3G_INS_AssetInsuranceClaimDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ins_Claim_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceClaim.Ins_Claim_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.Ins_Claim_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Company_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceClaim.Company_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOB_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceClaim.LOB_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.LOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Branch_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceClaim.Branch_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.Branch_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Customer_ID {
                get {
                    return ((int)(this[this.tableS3G_INS_AssetInsuranceClaim.Customer_IDColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.Customer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ICN_No {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceClaim.ICN_NoColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.ICN_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ICN_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableS3G_INS_AssetInsuranceClaim.ICN_DateColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.ICN_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PANum {
                get {
                    return ((string)(this[this.tableS3G_INS_AssetInsuranceClaim.PANumColumn]));
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.PANumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SANum {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceClaim.SANumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SANum\' in table \'S3G_INS_AssetInsuranceClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.SANumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserId {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceClaim.UserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserId\' in table \'S3G_INS_AssetInsuranceClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Active {
                get {
                    try {
                        return ((bool)(this[this.tableS3G_INS_AssetInsuranceClaim.Is_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Active\' in table \'S3G_INS_AssetInsuranceClaim\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.Is_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XmlPolicyClaimDetails {
                get {
                    try {
                        return ((string)(this[this.tableS3G_INS_AssetInsuranceClaim.XmlPolicyClaimDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XmlPolicyClaimDetails\' in table \'S3G_INS_AssetInsuranceClai" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_INS_AssetInsuranceClaim.XmlPolicyClaimDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSANumNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceClaim.SANumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSANumNull() {
                this[this.tableS3G_INS_AssetInsuranceClaim.SANumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIdNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceClaim.UserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIdNull() {
                this[this.tableS3G_INS_AssetInsuranceClaim.UserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIs_ActiveNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceClaim.Is_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIs_ActiveNull() {
                this[this.tableS3G_INS_AssetInsuranceClaim.Is_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXmlPolicyClaimDetailsNull() {
                return this.IsNull(this.tableS3G_INS_AssetInsuranceClaim.XmlPolicyClaimDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXmlPolicyClaimDetailsNull() {
                this[this.tableS3G_INS_AssetInsuranceClaim.XmlPolicyClaimDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class S3G_INS_AssetInsuranceEntryRowChangeEvent : global::System.EventArgs {
            
            private S3G_INS_AssetInsuranceEntryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRowChangeEvent(S3G_INS_AssetInsuranceEntryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceEntryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class S3G_INS_AssetInsuranceClaimRowChangeEvent : global::System.EventArgs {
            
            private S3G_INS_AssetInsuranceClaimRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRowChangeEvent(S3G_INS_AssetInsuranceClaimRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public S3G_INS_AssetInsuranceClaimRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace S3GBusEntity.Insurance.InsuranceMgtServicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S3G_INS_AssetInsuranceEntryDataTable : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public S3G_INS_AssetInsuranceEntryDataTable() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S3G_INS_AssetInsuranceEntry";
            tableMapping.ColumnMappings.Add("Account_Ins_ID", "Account_Ins_ID");
            tableMapping.ColumnMappings.Add("Company_ID", "Company_ID");
            tableMapping.ColumnMappings.Add("LOB_ID", "LOB_ID");
            tableMapping.ColumnMappings.Add("Branch_ID", "Branch_ID");
            tableMapping.ColumnMappings.Add("Customer_ID", "Customer_ID");
            tableMapping.ColumnMappings.Add("PANum", "PANum");
            tableMapping.ColumnMappings.Add("SANum", "SANum");
            tableMapping.ColumnMappings.Add("Ins_Done_By", "Ins_Done_By");
            tableMapping.ColumnMappings.Add("Ins_Company_Name", "Ins_Company_Name");
            tableMapping.ColumnMappings.Add("Ins_Company_Address", "Ins_Company_Address");
            tableMapping.ColumnMappings.Add("Pay_Type", "Pay_Type");
            tableMapping.ColumnMappings.Add("Installment_From_Date", "Installment_From_Date");
            tableMapping.ColumnMappings.Add("Installment_To_Date", "Installment_To_Date");
            tableMapping.ColumnMappings.Add("Account_Link_Key", "Account_Link_Key");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [S3G_INS_AssetInsuranceEntry] WHERE (([Account_Ins_ID] = @Original_Account_Ins_ID) AND ([Company_ID] = @Original_Company_ID) AND ([LOB_ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([Customer_ID] = @Original_Customer_ID) AND ([PANum] = @Original_PANum) AND ((@IsNull_SANum = 1 AND [SANum] IS NULL) OR ([SANum] = @Original_SANum)) AND ((@IsNull_Ins_Done_By = 1 AND [Ins_Done_By] IS NULL) OR ([Ins_Done_By] = @Original_Ins_Done_By)) AND ((@IsNull_Ins_Company_Name = 1 AND [Ins_Company_Name] IS NULL) OR ([Ins_Company_Name] = @Original_Ins_Company_Name)) AND ((@IsNull_Ins_Company_Address = 1 AND [Ins_Company_Address] IS NULL) OR ([Ins_Company_Address] = @Original_Ins_Company_Address)) AND ((@IsNull_Pay_Type = 1 AND [Pay_Type] IS NULL) OR ([Pay_Type] = @Original_Pay_Type)) AND ((@IsNull_Installment_From_Date = 1 AND [Installment_From_Date] IS NULL) OR ([Installment_From_Date] = @Original_Installment_From_Date)) AND ((@IsNull_Installment_To_Date = 1 AND [Installment_To_Date] IS NULL) OR ([Installment_To_Date] = @Original_Installment_To_Date)) AND ((@IsNull_Account_Link_Key = 1 AND [Account_Link_Key] IS NULL) OR ([Account_Link_Key] = @Original_Account_Link_Key)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Account_Ins_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Ins_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SANum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Done_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Done_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Done_By", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Done_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Company_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Company_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Company_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Company_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pay_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pay_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pay_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pay_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Installment_From_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_From_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Installment_From_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_From_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Installment_To_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_To_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Installment_To_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_To_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Account_Link_Key", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Link_Key", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Account_Link_Key", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Link_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [S3G_INS_AssetInsuranceEntry] SET [Company_ID] = @Company_ID, [LOB_ID] = @" +
                "LOB_ID, [Branch_ID] = @Branch_ID, [Customer_ID] = @Customer_ID, [PANum] = @PANum" +
                ", [SANum] = @SANum, [Ins_Done_By] = @Ins_Done_By, [Ins_Company_Name] = @Ins_Comp" +
                "any_Name, [Ins_Company_Address] = @Ins_Company_Address, [Pay_Type] = @Pay_Type, " +
                "[Installment_From_Date] = @Installment_From_Date, [Installment_To_Date] = @Insta" +
                "llment_To_Date, [Account_Link_Key] = @Account_Link_Key WHERE (([Account_Ins_ID] " +
                "= @Original_Account_Ins_ID) AND ([Company_ID] = @Original_Company_ID) AND ([LOB_" +
                "ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([Customer_I" +
                "D] = @Original_Customer_ID) AND ([PANum] = @Original_PANum) AND ((@IsNull_SANum " +
                "= 1 AND [SANum] IS NULL) OR ([SANum] = @Original_SANum)) AND ((@IsNull_Ins_Done_" +
                "By = 1 AND [Ins_Done_By] IS NULL) OR ([Ins_Done_By] = @Original_Ins_Done_By)) AN" +
                "D ((@IsNull_Ins_Company_Name = 1 AND [Ins_Company_Name] IS NULL) OR ([Ins_Compan" +
                "y_Name] = @Original_Ins_Company_Name)) AND ((@IsNull_Ins_Company_Address = 1 AND" +
                " [Ins_Company_Address] IS NULL) OR ([Ins_Company_Address] = @Original_Ins_Compan" +
                "y_Address)) AND ((@IsNull_Pay_Type = 1 AND [Pay_Type] IS NULL) OR ([Pay_Type] = " +
                "@Original_Pay_Type)) AND ((@IsNull_Installment_From_Date = 1 AND [Installment_Fr" +
                "om_Date] IS NULL) OR ([Installment_From_Date] = @Original_Installment_From_Date)" +
                ") AND ((@IsNull_Installment_To_Date = 1 AND [Installment_To_Date] IS NULL) OR ([" +
                "Installment_To_Date] = @Original_Installment_To_Date)) AND ((@IsNull_Account_Lin" +
                "k_Key = 1 AND [Account_Link_Key] IS NULL) OR ([Account_Link_Key] = @Original_Acc" +
                "ount_Link_Key)));\r\nSELECT Account_Ins_ID, Company_ID, LOB_ID, Branch_ID, Custome" +
                "r_ID, PANum, SANum, Ins_Done_By, Ins_Company_Name, Ins_Company_Address, Pay_Type" +
                ", Installment_From_Date, Installment_To_Date, Account_Link_Key FROM S3G_INS_Asse" +
                "tInsuranceEntry WHERE (Account_Ins_ID = @Account_Ins_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ins_Done_By", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Done_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ins_Company_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ins_Company_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pay_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pay_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Installment_From_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_From_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Installment_To_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_To_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account_Link_Key", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Link_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Account_Ins_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Ins_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SANum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Done_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Done_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Done_By", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Done_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Company_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Company_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ins_Company_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Company_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Company_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pay_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pay_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pay_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pay_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Installment_From_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_From_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Installment_From_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_From_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Installment_To_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_To_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Installment_To_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Installment_To_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Account_Link_Key", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Link_Key", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Account_Link_Key", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Link_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account_Ins_ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Account_Ins_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::S3GBusEntity.Properties.Settings.Default.S3G_Ver_1_12ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Account_Ins_ID, Company_ID, LOB_ID, Branch_ID, Customer_ID, PANum, SANum, " +
                "Ins_Done_By, Ins_Company_Name, Ins_Company_Address, Pay_Type, Installment_From_D" +
                "ate, Installment_To_Date, Account_Link_Key FROM S3G_INS_AssetInsuranceEntry";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsuranceMgtServices.S3G_INS_AssetInsuranceEntryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsuranceMgtServices.S3G_INS_AssetInsuranceEntryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsuranceMgtServices.S3G_INS_AssetInsuranceEntryDataTable dataTable = new InsuranceMgtServices.S3G_INS_AssetInsuranceEntryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsuranceMgtServices.S3G_INS_AssetInsuranceEntryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsuranceMgtServices dataSet) {
            return this.Adapter.Update(dataSet, "S3G_INS_AssetInsuranceEntry");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Account_Ins_ID, int Original_Company_ID, int Original_LOB_ID, int Original_Branch_ID, int Original_Customer_ID, string Original_PANum, string Original_SANum, string Original_Ins_Done_By, string Original_Ins_Company_Name, string Original_Ins_Company_Address, global::System.Nullable<int> Original_Pay_Type, global::System.Nullable<global::System.DateTime> Original_Installment_From_Date, global::System.Nullable<global::System.DateTime> Original_Installment_To_Date, global::System.Nullable<int> Original_Account_Link_Key) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Account_Ins_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Company_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_LOB_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Branch_ID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Customer_ID));
            if ((Original_PANum == null)) {
                throw new global::System.ArgumentNullException("Original_PANum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PANum));
            }
            if ((Original_SANum == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SANum));
            }
            if ((Original_Ins_Done_By == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Ins_Done_By));
            }
            if ((Original_Ins_Company_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Ins_Company_Name));
            }
            if ((Original_Ins_Company_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Ins_Company_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Ins_Company_Address));
            }
            if ((Original_Pay_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Pay_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Installment_From_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_Installment_From_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Installment_To_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_Installment_To_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Account_Link_Key.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_Account_Link_Key.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Company_ID, 
                    int LOB_ID, 
                    int Branch_ID, 
                    int Customer_ID, 
                    string PANum, 
                    string SANum, 
                    string Ins_Done_By, 
                    string Ins_Company_Name, 
                    string Ins_Company_Address, 
                    global::System.Nullable<int> Pay_Type, 
                    global::System.Nullable<global::System.DateTime> Installment_From_Date, 
                    global::System.Nullable<global::System.DateTime> Installment_To_Date, 
                    global::System.Nullable<int> Account_Link_Key, 
                    long Original_Account_Ins_ID, 
                    int Original_Company_ID, 
                    int Original_LOB_ID, 
                    int Original_Branch_ID, 
                    int Original_Customer_ID, 
                    string Original_PANum, 
                    string Original_SANum, 
                    string Original_Ins_Done_By, 
                    string Original_Ins_Company_Name, 
                    string Original_Ins_Company_Address, 
                    global::System.Nullable<int> Original_Pay_Type, 
                    global::System.Nullable<global::System.DateTime> Original_Installment_From_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Installment_To_Date, 
                    global::System.Nullable<int> Original_Account_Link_Key, 
                    long Account_Ins_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Company_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LOB_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Branch_ID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Customer_ID));
            if ((PANum == null)) {
                throw new global::System.ArgumentNullException("PANum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PANum));
            }
            if ((SANum == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SANum));
            }
            if ((Ins_Done_By == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Ins_Done_By));
            }
            if ((Ins_Company_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Ins_Company_Name));
            }
            if ((Ins_Company_Address == null)) {
                throw new global::System.ArgumentNullException("Ins_Company_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Ins_Company_Address));
            }
            if ((Pay_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Pay_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Installment_From_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Installment_From_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Installment_To_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Installment_To_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Account_Link_Key.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Account_Link_Key.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_Account_Ins_ID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Company_ID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_LOB_ID));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Branch_ID));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Customer_ID));
            if ((Original_PANum == null)) {
                throw new global::System.ArgumentNullException("Original_PANum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PANum));
            }
            if ((Original_SANum == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SANum));
            }
            if ((Original_Ins_Done_By == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Ins_Done_By));
            }
            if ((Original_Ins_Company_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Ins_Company_Name));
            }
            if ((Original_Ins_Company_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Ins_Company_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Ins_Company_Address));
            }
            if ((Original_Pay_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Pay_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Installment_From_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_Installment_From_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Installment_To_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_Installment_To_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Account_Link_Key.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_Account_Link_Key.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(Account_Ins_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Company_ID, 
                    int LOB_ID, 
                    int Branch_ID, 
                    int Customer_ID, 
                    string PANum, 
                    string SANum, 
                    string Ins_Done_By, 
                    string Ins_Company_Name, 
                    string Ins_Company_Address, 
                    global::System.Nullable<int> Pay_Type, 
                    global::System.Nullable<global::System.DateTime> Installment_From_Date, 
                    global::System.Nullable<global::System.DateTime> Installment_To_Date, 
                    global::System.Nullable<int> Account_Link_Key, 
                    long Original_Account_Ins_ID, 
                    int Original_Company_ID, 
                    int Original_LOB_ID, 
                    int Original_Branch_ID, 
                    int Original_Customer_ID, 
                    string Original_PANum, 
                    string Original_SANum, 
                    string Original_Ins_Done_By, 
                    string Original_Ins_Company_Name, 
                    string Original_Ins_Company_Address, 
                    global::System.Nullable<int> Original_Pay_Type, 
                    global::System.Nullable<global::System.DateTime> Original_Installment_From_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Installment_To_Date, 
                    global::System.Nullable<int> Original_Account_Link_Key) {
            return this.Update(Company_ID, LOB_ID, Branch_ID, Customer_ID, PANum, SANum, Ins_Done_By, Ins_Company_Name, Ins_Company_Address, Pay_Type, Installment_From_Date, Installment_To_Date, Account_Link_Key, Original_Account_Ins_ID, Original_Company_ID, Original_LOB_ID, Original_Branch_ID, Original_Customer_ID, Original_PANum, Original_SANum, Original_Ins_Done_By, Original_Ins_Company_Name, Original_Ins_Company_Address, Original_Pay_Type, Original_Installment_From_Date, Original_Installment_To_Date, Original_Account_Link_Key, Original_Account_Ins_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S3G_INS_AssetInsuranceClaimTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public S3G_INS_AssetInsuranceClaimTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S3G_INS_AssetInsuranceClaim";
            tableMapping.ColumnMappings.Add("Ins_Claim_ID", "Ins_Claim_ID");
            tableMapping.ColumnMappings.Add("Company_ID", "Company_ID");
            tableMapping.ColumnMappings.Add("LOB_ID", "LOB_ID");
            tableMapping.ColumnMappings.Add("Branch_ID", "Branch_ID");
            tableMapping.ColumnMappings.Add("Customer_ID", "Customer_ID");
            tableMapping.ColumnMappings.Add("ICN_No", "ICN_No");
            tableMapping.ColumnMappings.Add("ICN_Date", "ICN_Date");
            tableMapping.ColumnMappings.Add("PANum", "PANum");
            tableMapping.ColumnMappings.Add("SANum", "SANum");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [S3G_INS_AssetInsuranceClaim] WHERE (([Ins_Claim_ID] = @Original_Ins_Claim_ID) AND ([Company_ID] = @Original_Company_ID) AND ([LOB_ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([Customer_ID] = @Original_Customer_ID) AND ([ICN_No] = @Original_ICN_No) AND ([ICN_Date] = @Original_ICN_Date) AND ([PANum] = @Original_PANum) AND ((@IsNull_SANum = 1 AND [SANum] IS NULL) OR ([SANum] = @Original_SANum)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Claim_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Claim_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICN_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICN_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SANum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [S3G_INS_AssetInsuranceClaim] ([Company_ID], [LOB_ID], [Branch_ID], [Customer_ID], [ICN_No], [ICN_Date], [PANum], [SANum], [Created_By], [Created_On], [Modified_By], [Modified_On]) VALUES (@Company_ID, @LOB_ID, @Branch_ID, @Customer_ID, @ICN_No, @ICN_Date, @PANum, @SANum, @Created_By, @Created_On, @Modified_By, @Modified_On);
SELECT Ins_Claim_ID, Company_ID, LOB_ID, Branch_ID, Customer_ID, ICN_No, ICN_Date, PANum, SANum, Created_By, Created_On, Modified_By, Modified_On FROM S3G_INS_AssetInsuranceClaim WHERE (Ins_Claim_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICN_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICN_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [S3G_INS_AssetInsuranceClaim] SET [Company_ID] = @Company_ID, [LOB_ID] = @LOB_ID, [Branch_ID] = @Branch_ID, [Customer_ID] = @Customer_ID, [ICN_No] = @ICN_No, [ICN_Date] = @ICN_Date, [PANum] = @PANum, [SANum] = @SANum WHERE (([Ins_Claim_ID] = @Original_Ins_Claim_ID) AND ([Company_ID] = @Original_Company_ID) AND ([LOB_ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([Customer_ID] = @Original_Customer_ID) AND ([ICN_No] = @Original_ICN_No) AND ([ICN_Date] = @Original_ICN_Date) AND ([PANum] = @Original_PANum) AND ((@IsNull_SANum = 1 AND [SANum] IS NULL) OR ([SANum] = @Original_SANum)));
SELECT Ins_Claim_ID, Company_ID, LOB_ID, Branch_ID, Customer_ID, ICN_No, ICN_Date, PANum, SANum FROM S3G_INS_AssetInsuranceClaim WHERE (Ins_Claim_ID = @Ins_Claim_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICN_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICN_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ins_Claim_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Claim_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Customer_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICN_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICN_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICN_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SANum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SANum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SANum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ins_Claim_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Ins_Claim_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::S3GBusEntity.Properties.Settings.Default.S3G_Ver_1_12ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ins_Claim_ID, Company_ID, LOB_ID, Branch_ID, Customer_ID, ICN_No, ICN_Date" +
                ", PANum, SANum FROM S3G_INS_AssetInsuranceClaim";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsuranceMgtServices.S3G_INS_AssetInsuranceClaimDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsuranceMgtServices.S3G_INS_AssetInsuranceClaimDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsuranceMgtServices.S3G_INS_AssetInsuranceClaimDataTable dataTable = new InsuranceMgtServices.S3G_INS_AssetInsuranceClaimDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsuranceMgtServices.S3G_INS_AssetInsuranceClaimDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsuranceMgtServices dataSet) {
            return this.Adapter.Update(dataSet, "S3G_INS_AssetInsuranceClaim");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Ins_Claim_ID, int Original_Company_ID, int Original_LOB_ID, int Original_Branch_ID, int Original_Customer_ID, string Original_ICN_No, System.DateTime Original_ICN_Date, string Original_PANum, string Original_SANum) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Ins_Claim_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Company_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_LOB_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Branch_ID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Customer_ID));
            if ((Original_ICN_No == null)) {
                throw new global::System.ArgumentNullException("Original_ICN_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ICN_No));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ICN_Date));
            if ((Original_PANum == null)) {
                throw new global::System.ArgumentNullException("Original_PANum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PANum));
            }
            if ((Original_SANum == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SANum));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Company_ID, int LOB_ID, int Branch_ID, int Customer_ID, string ICN_No, System.DateTime ICN_Date, string PANum, string SANum, int Created_By, System.DateTime Created_On, global::System.Nullable<int> Modified_By, global::System.Nullable<global::System.DateTime> Modified_On) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Company_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(LOB_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Branch_ID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Customer_ID));
            if ((ICN_No == null)) {
                throw new global::System.ArgumentNullException("ICN_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ICN_No));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ICN_Date));
            if ((PANum == null)) {
                throw new global::System.ArgumentNullException("PANum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PANum));
            }
            if ((SANum == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SANum));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Created_By));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Created_On));
            if ((Modified_By.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Modified_By.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Modified_On.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Modified_On.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Company_ID, 
                    int LOB_ID, 
                    int Branch_ID, 
                    int Customer_ID, 
                    string ICN_No, 
                    System.DateTime ICN_Date, 
                    string PANum, 
                    string SANum, 
                    int Original_Ins_Claim_ID, 
                    int Original_Company_ID, 
                    int Original_LOB_ID, 
                    int Original_Branch_ID, 
                    int Original_Customer_ID, 
                    string Original_ICN_No, 
                    System.DateTime Original_ICN_Date, 
                    string Original_PANum, 
                    string Original_SANum, 
                    int Ins_Claim_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Company_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LOB_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Branch_ID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Customer_ID));
            if ((ICN_No == null)) {
                throw new global::System.ArgumentNullException("ICN_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ICN_No));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ICN_Date));
            if ((PANum == null)) {
                throw new global::System.ArgumentNullException("PANum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PANum));
            }
            if ((SANum == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SANum));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Ins_Claim_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Company_ID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_LOB_ID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Branch_ID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Customer_ID));
            if ((Original_ICN_No == null)) {
                throw new global::System.ArgumentNullException("Original_ICN_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ICN_No));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_ICN_Date));
            if ((Original_PANum == null)) {
                throw new global::System.ArgumentNullException("Original_PANum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PANum));
            }
            if ((Original_SANum == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SANum));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Ins_Claim_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Company_ID, 
                    int LOB_ID, 
                    int Branch_ID, 
                    int Customer_ID, 
                    string ICN_No, 
                    System.DateTime ICN_Date, 
                    string PANum, 
                    string SANum, 
                    int Original_Ins_Claim_ID, 
                    int Original_Company_ID, 
                    int Original_LOB_ID, 
                    int Original_Branch_ID, 
                    int Original_Customer_ID, 
                    string Original_ICN_No, 
                    System.DateTime Original_ICN_Date, 
                    string Original_PANum, 
                    string Original_SANum) {
            return this.Update(Company_ID, LOB_ID, Branch_ID, Customer_ID, ICN_No, ICN_Date, PANum, SANum, Original_Ins_Claim_ID, Original_Company_ID, Original_LOB_ID, Original_Branch_ID, Original_Customer_ID, Original_ICN_No, Original_ICN_Date, Original_PANum, Original_SANum, Original_Ins_Claim_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private S3G_INS_AssetInsuranceEntryDataTable _s3G_INS_AssetInsuranceEntryDataTable;
        
        private S3G_INS_AssetInsuranceClaimTableAdapter _s3G_INS_AssetInsuranceClaimTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public S3G_INS_AssetInsuranceEntryDataTable S3G_INS_AssetInsuranceEntryDataTable {
            get {
                return this._s3G_INS_AssetInsuranceEntryDataTable;
            }
            set {
                this._s3G_INS_AssetInsuranceEntryDataTable = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public S3G_INS_AssetInsuranceClaimTableAdapter S3G_INS_AssetInsuranceClaimTableAdapter {
            get {
                return this._s3G_INS_AssetInsuranceClaimTableAdapter;
            }
            set {
                this._s3G_INS_AssetInsuranceClaimTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._s3G_INS_AssetInsuranceEntryDataTable != null) 
                            && (this._s3G_INS_AssetInsuranceEntryDataTable.Connection != null))) {
                    return this._s3G_INS_AssetInsuranceEntryDataTable.Connection;
                }
                if (((this._s3G_INS_AssetInsuranceClaimTableAdapter != null) 
                            && (this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection != null))) {
                    return this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                    count = (count + 1);
                }
                if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(InsuranceMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S3G_INS_AssetInsuranceEntry.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceEntryDataTable.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S3G_INS_AssetInsuranceClaim.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceClaimTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(InsuranceMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S3G_INS_AssetInsuranceEntry.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceEntryDataTable.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S3G_INS_AssetInsuranceClaim.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceClaimTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(InsuranceMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S3G_INS_AssetInsuranceClaim.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceClaimTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S3G_INS_AssetInsuranceEntry.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s3G_INS_AssetInsuranceEntryDataTable.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(InsuranceMgtServices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._s3G_INS_AssetInsuranceEntryDataTable != null) 
                        && (this.MatchTableAdapterConnection(this._s3G_INS_AssetInsuranceEntryDataTable.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._s3G_INS_AssetInsuranceClaimTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                    revertConnections.Add(this._s3G_INS_AssetInsuranceEntryDataTable, this._s3G_INS_AssetInsuranceEntryDataTable.Connection);
                    this._s3G_INS_AssetInsuranceEntryDataTable.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s3G_INS_AssetInsuranceEntryDataTable.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s3G_INS_AssetInsuranceEntryDataTable.Adapter.AcceptChangesDuringUpdate) {
                        this._s3G_INS_AssetInsuranceEntryDataTable.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s3G_INS_AssetInsuranceEntryDataTable.Adapter);
                    }
                }
                if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                    revertConnections.Add(this._s3G_INS_AssetInsuranceClaimTableAdapter, this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection);
                    this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s3G_INS_AssetInsuranceClaimTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s3G_INS_AssetInsuranceClaimTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s3G_INS_AssetInsuranceClaimTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s3G_INS_AssetInsuranceClaimTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._s3G_INS_AssetInsuranceEntryDataTable != null)) {
                    this._s3G_INS_AssetInsuranceEntryDataTable.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s3G_INS_AssetInsuranceEntryDataTable]));
                    this._s3G_INS_AssetInsuranceEntryDataTable.Transaction = null;
                }
                if ((this._s3G_INS_AssetInsuranceClaimTableAdapter != null)) {
                    this._s3G_INS_AssetInsuranceClaimTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s3G_INS_AssetInsuranceClaimTableAdapter]));
                    this._s3G_INS_AssetInsuranceClaimTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591