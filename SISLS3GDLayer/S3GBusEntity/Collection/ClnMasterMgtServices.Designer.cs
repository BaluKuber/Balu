//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace S3GBusEntity.Collection {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClnMasterMgtServices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClnMasterMgtServices : global::System.Data.DataSet {
        
        private S3G_CLN_DebtCollectorMasterDataTable tableS3G_CLN_DebtCollectorMaster;
        
        private S3G_CLN_DelinquencyParameterDataTable tableS3G_CLN_DelinquencyParameter;
        
        private S3G_CLN_AppropriationLogicDataTable tableS3G_CLN_AppropriationLogic;
        
        private S3G_CLN_AppropriationDetailsDataTable tableS3G_CLN_AppropriationDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ClnMasterMgtServices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ClnMasterMgtServices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["S3G_CLN_DebtCollectorMaster"] != null)) {
                    base.Tables.Add(new S3G_CLN_DebtCollectorMasterDataTable(ds.Tables["S3G_CLN_DebtCollectorMaster"]));
                }
                if ((ds.Tables["S3G_CLN_DelinquencyParameter"] != null)) {
                    base.Tables.Add(new S3G_CLN_DelinquencyParameterDataTable(ds.Tables["S3G_CLN_DelinquencyParameter"]));
                }
                if ((ds.Tables["S3G_CLN_AppropriationLogic"] != null)) {
                    base.Tables.Add(new S3G_CLN_AppropriationLogicDataTable(ds.Tables["S3G_CLN_AppropriationLogic"]));
                }
                if ((ds.Tables["S3G_CLN_AppropriationDetails"] != null)) {
                    base.Tables.Add(new S3G_CLN_AppropriationDetailsDataTable(ds.Tables["S3G_CLN_AppropriationDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_CLN_DebtCollectorMasterDataTable S3G_CLN_DebtCollectorMaster {
            get {
                return this.tableS3G_CLN_DebtCollectorMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_CLN_DelinquencyParameterDataTable S3G_CLN_DelinquencyParameter {
            get {
                return this.tableS3G_CLN_DelinquencyParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_CLN_AppropriationLogicDataTable S3G_CLN_AppropriationLogic {
            get {
                return this.tableS3G_CLN_AppropriationLogic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_CLN_AppropriationDetailsDataTable S3G_CLN_AppropriationDetails {
            get {
                return this.tableS3G_CLN_AppropriationDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ClnMasterMgtServices cln = ((ClnMasterMgtServices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["S3G_CLN_DebtCollectorMaster"] != null)) {
                    base.Tables.Add(new S3G_CLN_DebtCollectorMasterDataTable(ds.Tables["S3G_CLN_DebtCollectorMaster"]));
                }
                if ((ds.Tables["S3G_CLN_DelinquencyParameter"] != null)) {
                    base.Tables.Add(new S3G_CLN_DelinquencyParameterDataTable(ds.Tables["S3G_CLN_DelinquencyParameter"]));
                }
                if ((ds.Tables["S3G_CLN_AppropriationLogic"] != null)) {
                    base.Tables.Add(new S3G_CLN_AppropriationLogicDataTable(ds.Tables["S3G_CLN_AppropriationLogic"]));
                }
                if ((ds.Tables["S3G_CLN_AppropriationDetails"] != null)) {
                    base.Tables.Add(new S3G_CLN_AppropriationDetailsDataTable(ds.Tables["S3G_CLN_AppropriationDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableS3G_CLN_DebtCollectorMaster = ((S3G_CLN_DebtCollectorMasterDataTable)(base.Tables["S3G_CLN_DebtCollectorMaster"]));
            if ((initTable == true)) {
                if ((this.tableS3G_CLN_DebtCollectorMaster != null)) {
                    this.tableS3G_CLN_DebtCollectorMaster.InitVars();
                }
            }
            this.tableS3G_CLN_DelinquencyParameter = ((S3G_CLN_DelinquencyParameterDataTable)(base.Tables["S3G_CLN_DelinquencyParameter"]));
            if ((initTable == true)) {
                if ((this.tableS3G_CLN_DelinquencyParameter != null)) {
                    this.tableS3G_CLN_DelinquencyParameter.InitVars();
                }
            }
            this.tableS3G_CLN_AppropriationLogic = ((S3G_CLN_AppropriationLogicDataTable)(base.Tables["S3G_CLN_AppropriationLogic"]));
            if ((initTable == true)) {
                if ((this.tableS3G_CLN_AppropriationLogic != null)) {
                    this.tableS3G_CLN_AppropriationLogic.InitVars();
                }
            }
            this.tableS3G_CLN_AppropriationDetails = ((S3G_CLN_AppropriationDetailsDataTable)(base.Tables["S3G_CLN_AppropriationDetails"]));
            if ((initTable == true)) {
                if ((this.tableS3G_CLN_AppropriationDetails != null)) {
                    this.tableS3G_CLN_AppropriationDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ClnMasterMgtServices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClnMasterMgtServices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableS3G_CLN_DebtCollectorMaster = new S3G_CLN_DebtCollectorMasterDataTable();
            base.Tables.Add(this.tableS3G_CLN_DebtCollectorMaster);
            this.tableS3G_CLN_DelinquencyParameter = new S3G_CLN_DelinquencyParameterDataTable();
            base.Tables.Add(this.tableS3G_CLN_DelinquencyParameter);
            this.tableS3G_CLN_AppropriationLogic = new S3G_CLN_AppropriationLogicDataTable();
            base.Tables.Add(this.tableS3G_CLN_AppropriationLogic);
            this.tableS3G_CLN_AppropriationDetails = new S3G_CLN_AppropriationDetailsDataTable();
            base.Tables.Add(this.tableS3G_CLN_AppropriationDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS3G_CLN_DebtCollectorMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS3G_CLN_DelinquencyParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS3G_CLN_AppropriationLogic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS3G_CLN_AppropriationDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClnMasterMgtServices ds = new ClnMasterMgtServices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void S3G_CLN_DebtCollectorMasterRowChangeEventHandler(object sender, S3G_CLN_DebtCollectorMasterRowChangeEvent e);
        
        public delegate void S3G_CLN_DelinquencyParameterRowChangeEventHandler(object sender, S3G_CLN_DelinquencyParameterRowChangeEvent e);
        
        public delegate void S3G_CLN_AppropriationLogicRowChangeEventHandler(object sender, S3G_CLN_AppropriationLogicRowChangeEvent e);
        
        public delegate void S3G_CLN_AppropriationDetailsRowChangeEventHandler(object sender, S3G_CLN_AppropriationDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_CLN_DebtCollectorMasterDataTable : global::System.Data.TypedTableBase<S3G_CLN_DebtCollectorMasterRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLOB_ID;
            
            private global::System.Data.DataColumn columnBranch_ID;
            
            private global::System.Data.DataColumn columnDebtCollector_Type;
            
            private global::System.Data.DataColumn columnDebtCollector_Code;
            
            private global::System.Data.DataColumn columnIs_Active;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            private global::System.Data.DataColumn columnXMLParamtDebtCollectorDet;
            
            private global::System.Data.DataColumn columnTxn_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterDataTable() {
                this.TableName = "S3G_CLN_DebtCollectorMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_DebtCollectorMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S3G_CLN_DebtCollectorMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOB_IDColumn {
                get {
                    return this.columnLOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Branch_IDColumn {
                get {
                    return this.columnBranch_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebtCollector_TypeColumn {
                get {
                    return this.columnDebtCollector_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebtCollector_CodeColumn {
                get {
                    return this.columnDebtCollector_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Is_ActiveColumn {
                get {
                    return this.columnIs_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMLParamtDebtCollectorDetColumn {
                get {
                    return this.columnXMLParamtDebtCollectorDet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Txn_IDColumn {
                get {
                    return this.columnTxn_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterRow this[int index] {
                get {
                    return ((S3G_CLN_DebtCollectorMasterRow)(this.Rows[index]));
                }
            }
            
            public event S3G_CLN_DebtCollectorMasterRowChangeEventHandler S3G_CLN_DebtCollectorMasterRowChanging;
            
            public event S3G_CLN_DebtCollectorMasterRowChangeEventHandler S3G_CLN_DebtCollectorMasterRowChanged;
            
            public event S3G_CLN_DebtCollectorMasterRowChangeEventHandler S3G_CLN_DebtCollectorMasterRowDeleting;
            
            public event S3G_CLN_DebtCollectorMasterRowChangeEventHandler S3G_CLN_DebtCollectorMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS3G_CLN_DebtCollectorMasterRow(S3G_CLN_DebtCollectorMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterRow AddS3G_CLN_DebtCollectorMasterRow(int Company_ID, int LOB_ID, int Branch_ID, string DebtCollector_Type, string DebtCollector_Code, bool Is_Active, int Created_By, System.DateTime Created_On, int Modified_By, System.DateTime Modified_On, string XMLParamtDebtCollectorDet, int Txn_ID) {
                S3G_CLN_DebtCollectorMasterRow rowS3G_CLN_DebtCollectorMasterRow = ((S3G_CLN_DebtCollectorMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        LOB_ID,
                        Branch_ID,
                        DebtCollector_Type,
                        DebtCollector_Code,
                        Is_Active,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On,
                        XMLParamtDebtCollectorDet,
                        Txn_ID};
                rowS3G_CLN_DebtCollectorMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_CLN_DebtCollectorMasterRow);
                return rowS3G_CLN_DebtCollectorMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S3G_CLN_DebtCollectorMasterDataTable cln = ((S3G_CLN_DebtCollectorMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_CLN_DebtCollectorMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLOB_ID = base.Columns["LOB_ID"];
                this.columnBranch_ID = base.Columns["Branch_ID"];
                this.columnDebtCollector_Type = base.Columns["DebtCollector_Type"];
                this.columnDebtCollector_Code = base.Columns["DebtCollector_Code"];
                this.columnIs_Active = base.Columns["Is_Active"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
                this.columnXMLParamtDebtCollectorDet = base.Columns["XMLParamtDebtCollectorDet"];
                this.columnTxn_ID = base.Columns["Txn_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLOB_ID = new global::System.Data.DataColumn("LOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB_ID);
                this.columnBranch_ID = new global::System.Data.DataColumn("Branch_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch_ID);
                this.columnDebtCollector_Type = new global::System.Data.DataColumn("DebtCollector_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebtCollector_Type);
                this.columnDebtCollector_Code = new global::System.Data.DataColumn("DebtCollector_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebtCollector_Code);
                this.columnIs_Active = new global::System.Data.DataColumn("Is_Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Active);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.columnXMLParamtDebtCollectorDet = new global::System.Data.DataColumn("XMLParamtDebtCollectorDet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMLParamtDebtCollectorDet);
                this.columnTxn_ID = new global::System.Data.DataColumn("Txn_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTxn_ID);
                this.columnDebtCollector_Type.MaxLength = 50;
                this.columnDebtCollector_Code.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterRow NewS3G_CLN_DebtCollectorMasterRow() {
                return ((S3G_CLN_DebtCollectorMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_CLN_DebtCollectorMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_CLN_DebtCollectorMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_CLN_DebtCollectorMasterRowChanged != null)) {
                    this.S3G_CLN_DebtCollectorMasterRowChanged(this, new S3G_CLN_DebtCollectorMasterRowChangeEvent(((S3G_CLN_DebtCollectorMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_CLN_DebtCollectorMasterRowChanging != null)) {
                    this.S3G_CLN_DebtCollectorMasterRowChanging(this, new S3G_CLN_DebtCollectorMasterRowChangeEvent(((S3G_CLN_DebtCollectorMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_CLN_DebtCollectorMasterRowDeleted != null)) {
                    this.S3G_CLN_DebtCollectorMasterRowDeleted(this, new S3G_CLN_DebtCollectorMasterRowChangeEvent(((S3G_CLN_DebtCollectorMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_CLN_DebtCollectorMasterRowDeleting != null)) {
                    this.S3G_CLN_DebtCollectorMasterRowDeleting(this, new S3G_CLN_DebtCollectorMasterRowChangeEvent(((S3G_CLN_DebtCollectorMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS3G_CLN_DebtCollectorMasterRow(S3G_CLN_DebtCollectorMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClnMasterMgtServices ds = new ClnMasterMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_CLN_DebtCollectorMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_CLN_DelinquencyParameterDataTable : global::System.Data.TypedTableBase<S3G_CLN_DelinquencyParameterRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLOB_ID;
            
            private global::System.Data.DataColumn columnDelinquent_Param_ID;
            
            private global::System.Data.DataColumn columnDelinquency_Type_Code;
            
            private global::System.Data.DataColumn columnDelinquency_Type;
            
            private global::System.Data.DataColumn columnCut_Off_Month;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            private global::System.Data.DataColumn columnTxn_ID;
            
            private global::System.Data.DataColumn columnIs_Active;
            
            private global::System.Data.DataColumn columnXMLvalues;
            
            private global::System.Data.DataColumn columnIsAdd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterDataTable() {
                this.TableName = "S3G_CLN_DelinquencyParameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_DelinquencyParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S3G_CLN_DelinquencyParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOB_IDColumn {
                get {
                    return this.columnLOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Delinquent_Param_IDColumn {
                get {
                    return this.columnDelinquent_Param_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Delinquency_Type_CodeColumn {
                get {
                    return this.columnDelinquency_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Delinquency_TypeColumn {
                get {
                    return this.columnDelinquency_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cut_Off_MonthColumn {
                get {
                    return this.columnCut_Off_Month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Txn_IDColumn {
                get {
                    return this.columnTxn_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Is_ActiveColumn {
                get {
                    return this.columnIs_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMLvaluesColumn {
                get {
                    return this.columnXMLvalues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAddColumn {
                get {
                    return this.columnIsAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterRow this[int index] {
                get {
                    return ((S3G_CLN_DelinquencyParameterRow)(this.Rows[index]));
                }
            }
            
            public event S3G_CLN_DelinquencyParameterRowChangeEventHandler S3G_CLN_DelinquencyParameterRowChanging;
            
            public event S3G_CLN_DelinquencyParameterRowChangeEventHandler S3G_CLN_DelinquencyParameterRowChanged;
            
            public event S3G_CLN_DelinquencyParameterRowChangeEventHandler S3G_CLN_DelinquencyParameterRowDeleting;
            
            public event S3G_CLN_DelinquencyParameterRowChangeEventHandler S3G_CLN_DelinquencyParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS3G_CLN_DelinquencyParameterRow(S3G_CLN_DelinquencyParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterRow AddS3G_CLN_DelinquencyParameterRow(int Company_ID, int LOB_ID, string Delinquent_Param_ID, int Delinquency_Type_Code, int Delinquency_Type, int Cut_Off_Month, int Created_By, System.DateTime Created_On, int Modified_By, System.DateTime Modified_On, int Txn_ID, bool Is_Active, string XMLvalues, bool IsAdd) {
                S3G_CLN_DelinquencyParameterRow rowS3G_CLN_DelinquencyParameterRow = ((S3G_CLN_DelinquencyParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        LOB_ID,
                        Delinquent_Param_ID,
                        Delinquency_Type_Code,
                        Delinquency_Type,
                        Cut_Off_Month,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On,
                        Txn_ID,
                        Is_Active,
                        XMLvalues,
                        IsAdd};
                rowS3G_CLN_DelinquencyParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_CLN_DelinquencyParameterRow);
                return rowS3G_CLN_DelinquencyParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S3G_CLN_DelinquencyParameterDataTable cln = ((S3G_CLN_DelinquencyParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_CLN_DelinquencyParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLOB_ID = base.Columns["LOB_ID"];
                this.columnDelinquent_Param_ID = base.Columns["Delinquent_Param_ID"];
                this.columnDelinquency_Type_Code = base.Columns["Delinquency_Type_Code"];
                this.columnDelinquency_Type = base.Columns["Delinquency_Type"];
                this.columnCut_Off_Month = base.Columns["Cut_Off_Month"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
                this.columnTxn_ID = base.Columns["Txn_ID"];
                this.columnIs_Active = base.Columns["Is_Active"];
                this.columnXMLvalues = base.Columns["XMLvalues"];
                this.columnIsAdd = base.Columns["IsAdd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLOB_ID = new global::System.Data.DataColumn("LOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB_ID);
                this.columnDelinquent_Param_ID = new global::System.Data.DataColumn("Delinquent_Param_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelinquent_Param_ID);
                this.columnDelinquency_Type_Code = new global::System.Data.DataColumn("Delinquency_Type_Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelinquency_Type_Code);
                this.columnDelinquency_Type = new global::System.Data.DataColumn("Delinquency_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelinquency_Type);
                this.columnCut_Off_Month = new global::System.Data.DataColumn("Cut_Off_Month", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCut_Off_Month);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.columnTxn_ID = new global::System.Data.DataColumn("Txn_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTxn_ID);
                this.columnIs_Active = new global::System.Data.DataColumn("Is_Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Active);
                this.columnXMLvalues = new global::System.Data.DataColumn("XMLvalues", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMLvalues);
                this.columnIsAdd = new global::System.Data.DataColumn("IsAdd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAdd);
                this.columnDelinquent_Param_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterRow NewS3G_CLN_DelinquencyParameterRow() {
                return ((S3G_CLN_DelinquencyParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_CLN_DelinquencyParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_CLN_DelinquencyParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_CLN_DelinquencyParameterRowChanged != null)) {
                    this.S3G_CLN_DelinquencyParameterRowChanged(this, new S3G_CLN_DelinquencyParameterRowChangeEvent(((S3G_CLN_DelinquencyParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_CLN_DelinquencyParameterRowChanging != null)) {
                    this.S3G_CLN_DelinquencyParameterRowChanging(this, new S3G_CLN_DelinquencyParameterRowChangeEvent(((S3G_CLN_DelinquencyParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_CLN_DelinquencyParameterRowDeleted != null)) {
                    this.S3G_CLN_DelinquencyParameterRowDeleted(this, new S3G_CLN_DelinquencyParameterRowChangeEvent(((S3G_CLN_DelinquencyParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_CLN_DelinquencyParameterRowDeleting != null)) {
                    this.S3G_CLN_DelinquencyParameterRowDeleting(this, new S3G_CLN_DelinquencyParameterRowChangeEvent(((S3G_CLN_DelinquencyParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS3G_CLN_DelinquencyParameterRow(S3G_CLN_DelinquencyParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClnMasterMgtServices ds = new ClnMasterMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_CLN_DelinquencyParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_CLN_AppropriationLogicDataTable : global::System.Data.TypedTableBase<S3G_CLN_AppropriationLogicRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLOB_ID;
            
            private global::System.Data.DataColumn columnAppropriation_ID;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            private global::System.Data.DataColumn columnTxn_ID;
            
            private global::System.Data.DataColumn columnXMLDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicDataTable() {
                this.TableName = "S3G_CLN_AppropriationLogic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_AppropriationLogicDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S3G_CLN_AppropriationLogicDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOB_IDColumn {
                get {
                    return this.columnLOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Appropriation_IDColumn {
                get {
                    return this.columnAppropriation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Txn_IDColumn {
                get {
                    return this.columnTxn_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMLDetailsColumn {
                get {
                    return this.columnXMLDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicRow this[int index] {
                get {
                    return ((S3G_CLN_AppropriationLogicRow)(this.Rows[index]));
                }
            }
            
            public event S3G_CLN_AppropriationLogicRowChangeEventHandler S3G_CLN_AppropriationLogicRowChanging;
            
            public event S3G_CLN_AppropriationLogicRowChangeEventHandler S3G_CLN_AppropriationLogicRowChanged;
            
            public event S3G_CLN_AppropriationLogicRowChangeEventHandler S3G_CLN_AppropriationLogicRowDeleting;
            
            public event S3G_CLN_AppropriationLogicRowChangeEventHandler S3G_CLN_AppropriationLogicRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS3G_CLN_AppropriationLogicRow(S3G_CLN_AppropriationLogicRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicRow AddS3G_CLN_AppropriationLogicRow(int Company_ID, int LOB_ID, int Appropriation_ID, int Created_By, System.DateTime Created_On, int Modified_By, System.DateTime Modified_On, int Txn_ID, string XMLDetails) {
                S3G_CLN_AppropriationLogicRow rowS3G_CLN_AppropriationLogicRow = ((S3G_CLN_AppropriationLogicRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        LOB_ID,
                        Appropriation_ID,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On,
                        Txn_ID,
                        XMLDetails};
                rowS3G_CLN_AppropriationLogicRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_CLN_AppropriationLogicRow);
                return rowS3G_CLN_AppropriationLogicRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S3G_CLN_AppropriationLogicDataTable cln = ((S3G_CLN_AppropriationLogicDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_CLN_AppropriationLogicDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLOB_ID = base.Columns["LOB_ID"];
                this.columnAppropriation_ID = base.Columns["Appropriation_ID"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
                this.columnTxn_ID = base.Columns["Txn_ID"];
                this.columnXMLDetails = base.Columns["XMLDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLOB_ID = new global::System.Data.DataColumn("LOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB_ID);
                this.columnAppropriation_ID = new global::System.Data.DataColumn("Appropriation_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppropriation_ID);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.columnTxn_ID = new global::System.Data.DataColumn("Txn_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTxn_ID);
                this.columnXMLDetails = new global::System.Data.DataColumn("XMLDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMLDetails);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicRow NewS3G_CLN_AppropriationLogicRow() {
                return ((S3G_CLN_AppropriationLogicRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_CLN_AppropriationLogicRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_CLN_AppropriationLogicRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_CLN_AppropriationLogicRowChanged != null)) {
                    this.S3G_CLN_AppropriationLogicRowChanged(this, new S3G_CLN_AppropriationLogicRowChangeEvent(((S3G_CLN_AppropriationLogicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_CLN_AppropriationLogicRowChanging != null)) {
                    this.S3G_CLN_AppropriationLogicRowChanging(this, new S3G_CLN_AppropriationLogicRowChangeEvent(((S3G_CLN_AppropriationLogicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_CLN_AppropriationLogicRowDeleted != null)) {
                    this.S3G_CLN_AppropriationLogicRowDeleted(this, new S3G_CLN_AppropriationLogicRowChangeEvent(((S3G_CLN_AppropriationLogicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_CLN_AppropriationLogicRowDeleting != null)) {
                    this.S3G_CLN_AppropriationLogicRowDeleting(this, new S3G_CLN_AppropriationLogicRowChangeEvent(((S3G_CLN_AppropriationLogicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS3G_CLN_AppropriationLogicRow(S3G_CLN_AppropriationLogicRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClnMasterMgtServices ds = new ClnMasterMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_CLN_AppropriationLogicDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_CLN_AppropriationDetailsDataTable : global::System.Data.TypedTableBase<S3G_CLN_AppropriationDetailsRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnAppropriation_ID;
            
            private global::System.Data.DataColumn columnSequence_Number;
            
            private global::System.Data.DataColumn columnDue_Type_Code;
            
            private global::System.Data.DataColumn columnDue_Type;
            
            private global::System.Data.DataColumn columnPercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsDataTable() {
                this.TableName = "S3G_CLN_AppropriationDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_AppropriationDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S3G_CLN_AppropriationDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Appropriation_IDColumn {
                get {
                    return this.columnAppropriation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sequence_NumberColumn {
                get {
                    return this.columnSequence_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_Type_CodeColumn {
                get {
                    return this.columnDue_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_TypeColumn {
                get {
                    return this.columnDue_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsRow this[int index] {
                get {
                    return ((S3G_CLN_AppropriationDetailsRow)(this.Rows[index]));
                }
            }
            
            public event S3G_CLN_AppropriationDetailsRowChangeEventHandler S3G_CLN_AppropriationDetailsRowChanging;
            
            public event S3G_CLN_AppropriationDetailsRowChangeEventHandler S3G_CLN_AppropriationDetailsRowChanged;
            
            public event S3G_CLN_AppropriationDetailsRowChangeEventHandler S3G_CLN_AppropriationDetailsRowDeleting;
            
            public event S3G_CLN_AppropriationDetailsRowChangeEventHandler S3G_CLN_AppropriationDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS3G_CLN_AppropriationDetailsRow(S3G_CLN_AppropriationDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsRow AddS3G_CLN_AppropriationDetailsRow(int Company_ID, int Appropriation_ID, int Sequence_Number, int Due_Type_Code, int Due_Type, int Percentage) {
                S3G_CLN_AppropriationDetailsRow rowS3G_CLN_AppropriationDetailsRow = ((S3G_CLN_AppropriationDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        Appropriation_ID,
                        Sequence_Number,
                        Due_Type_Code,
                        Due_Type,
                        Percentage};
                rowS3G_CLN_AppropriationDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_CLN_AppropriationDetailsRow);
                return rowS3G_CLN_AppropriationDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S3G_CLN_AppropriationDetailsDataTable cln = ((S3G_CLN_AppropriationDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_CLN_AppropriationDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnAppropriation_ID = base.Columns["Appropriation_ID"];
                this.columnSequence_Number = base.Columns["Sequence_Number"];
                this.columnDue_Type_Code = base.Columns["Due_Type_Code"];
                this.columnDue_Type = base.Columns["Due_Type"];
                this.columnPercentage = base.Columns["Percentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnAppropriation_ID = new global::System.Data.DataColumn("Appropriation_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppropriation_ID);
                this.columnSequence_Number = new global::System.Data.DataColumn("Sequence_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequence_Number);
                this.columnDue_Type_Code = new global::System.Data.DataColumn("Due_Type_Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Type_Code);
                this.columnDue_Type = new global::System.Data.DataColumn("Due_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Type);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsRow NewS3G_CLN_AppropriationDetailsRow() {
                return ((S3G_CLN_AppropriationDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_CLN_AppropriationDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_CLN_AppropriationDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_CLN_AppropriationDetailsRowChanged != null)) {
                    this.S3G_CLN_AppropriationDetailsRowChanged(this, new S3G_CLN_AppropriationDetailsRowChangeEvent(((S3G_CLN_AppropriationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_CLN_AppropriationDetailsRowChanging != null)) {
                    this.S3G_CLN_AppropriationDetailsRowChanging(this, new S3G_CLN_AppropriationDetailsRowChangeEvent(((S3G_CLN_AppropriationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_CLN_AppropriationDetailsRowDeleted != null)) {
                    this.S3G_CLN_AppropriationDetailsRowDeleted(this, new S3G_CLN_AppropriationDetailsRowChangeEvent(((S3G_CLN_AppropriationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_CLN_AppropriationDetailsRowDeleting != null)) {
                    this.S3G_CLN_AppropriationDetailsRowDeleting(this, new S3G_CLN_AppropriationDetailsRowChangeEvent(((S3G_CLN_AppropriationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS3G_CLN_AppropriationDetailsRow(S3G_CLN_AppropriationDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClnMasterMgtServices ds = new ClnMasterMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_CLN_AppropriationDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S3G_CLN_DebtCollectorMasterRow : global::System.Data.DataRow {
            
            private S3G_CLN_DebtCollectorMasterDataTable tableS3G_CLN_DebtCollectorMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_DebtCollectorMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_CLN_DebtCollectorMaster = ((S3G_CLN_DebtCollectorMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOB_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.LOB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOB_ID\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.LOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Branch_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.Branch_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch_ID\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Branch_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebtCollector_Type {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebtCollector_Type\' in table \'S3G_CLN_DebtCollectorMaster\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebtCollector_Code {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebtCollector_Code\' in table \'S3G_CLN_DebtCollectorMaster\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Active {
                get {
                    try {
                        return ((bool)(this[this.tableS3G_CLN_DebtCollectorMaster.Is_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Active\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Is_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_DebtCollectorMaster.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_DebtCollectorMaster.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMLParamtDebtCollectorDet {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_DebtCollectorMaster.XMLParamtDebtCollectorDetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XMLParamtDebtCollectorDet\' in table \'S3G_CLN_DebtCollectorM" +
                                "aster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.XMLParamtDebtCollectorDetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Txn_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DebtCollectorMaster.Txn_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Txn_ID\' in table \'S3G_CLN_DebtCollectorMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DebtCollectorMaster.Txn_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOB_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.LOB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOB_IDNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.LOB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranch_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Branch_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranch_IDNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Branch_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebtCollector_TypeNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebtCollector_TypeNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebtCollector_CodeNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebtCollector_CodeNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.DebtCollector_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_ActiveNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Is_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_ActiveNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Is_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Modified_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMLParamtDebtCollectorDetNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.XMLParamtDebtCollectorDetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMLParamtDebtCollectorDetNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.XMLParamtDebtCollectorDetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTxn_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DebtCollectorMaster.Txn_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTxn_IDNull() {
                this[this.tableS3G_CLN_DebtCollectorMaster.Txn_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S3G_CLN_DelinquencyParameterRow : global::System.Data.DataRow {
            
            private S3G_CLN_DelinquencyParameterDataTable tableS3G_CLN_DelinquencyParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_DelinquencyParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_CLN_DelinquencyParameter = ((S3G_CLN_DelinquencyParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'S3G_CLN_DelinquencyParameter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOB_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.LOB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOB_ID\' in table \'S3G_CLN_DelinquencyParameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.LOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Delinquent_Param_ID {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_DelinquencyParameter.Delinquent_Param_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delinquent_Param_ID\' in table \'S3G_CLN_DelinquencyParameter" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Delinquent_Param_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Delinquency_Type_Code {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_Type_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delinquency_Type_Code\' in table \'S3G_CLN_DelinquencyParamet" +
                                "er\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Delinquency_Type {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delinquency_Type\' in table \'S3G_CLN_DelinquencyParameter\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cut_Off_Month {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Cut_Off_MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cut_Off_Month\' in table \'S3G_CLN_DelinquencyParameter\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Cut_Off_MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'S3G_CLN_DelinquencyParameter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_DelinquencyParameter.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'S3G_CLN_DelinquencyParameter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'S3G_CLN_DelinquencyParameter\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_DelinquencyParameter.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'S3G_CLN_DelinquencyParameter\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Txn_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_DelinquencyParameter.Txn_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Txn_ID\' in table \'S3G_CLN_DelinquencyParameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Txn_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Active {
                get {
                    try {
                        return ((bool)(this[this.tableS3G_CLN_DelinquencyParameter.Is_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Active\' in table \'S3G_CLN_DelinquencyParameter\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.Is_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMLvalues {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_DelinquencyParameter.XMLvaluesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XMLvalues\' in table \'S3G_CLN_DelinquencyParameter\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.XMLvaluesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdd {
                get {
                    try {
                        return ((bool)(this[this.tableS3G_CLN_DelinquencyParameter.IsAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAdd\' in table \'S3G_CLN_DelinquencyParameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_DelinquencyParameter.IsAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOB_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.LOB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOB_IDNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.LOB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelinquent_Param_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Delinquent_Param_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelinquent_Param_IDNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Delinquent_Param_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelinquency_Type_CodeNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Delinquency_Type_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelinquency_Type_CodeNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_Type_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelinquency_TypeNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Delinquency_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelinquency_TypeNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Delinquency_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCut_Off_MonthNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Cut_Off_MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCut_Off_MonthNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Cut_Off_MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Modified_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTxn_IDNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Txn_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTxn_IDNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Txn_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_ActiveNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.Is_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_ActiveNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.Is_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMLvaluesNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.XMLvaluesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMLvaluesNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.XMLvaluesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAddNull() {
                return this.IsNull(this.tableS3G_CLN_DelinquencyParameter.IsAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAddNull() {
                this[this.tableS3G_CLN_DelinquencyParameter.IsAddColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S3G_CLN_AppropriationLogicRow : global::System.Data.DataRow {
            
            private S3G_CLN_AppropriationLogicDataTable tableS3G_CLN_AppropriationLogic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_AppropriationLogicRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_CLN_AppropriationLogic = ((S3G_CLN_AppropriationLogicDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'S3G_CLN_AppropriationLogic\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOB_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.LOB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOB_ID\' in table \'S3G_CLN_AppropriationLogic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.LOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Appropriation_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.Appropriation_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Appropriation_ID\' in table \'S3G_CLN_AppropriationLogic\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Appropriation_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'S3G_CLN_AppropriationLogic\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_AppropriationLogic.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'S3G_CLN_AppropriationLogic\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'S3G_CLN_AppropriationLogic\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_CLN_AppropriationLogic.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'S3G_CLN_AppropriationLogic\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Txn_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationLogic.Txn_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Txn_ID\' in table \'S3G_CLN_AppropriationLogic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.Txn_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMLDetails {
                get {
                    try {
                        return ((string)(this[this.tableS3G_CLN_AppropriationLogic.XMLDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XMLDetails\' in table \'S3G_CLN_AppropriationLogic\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationLogic.XMLDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOB_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.LOB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOB_IDNull() {
                this[this.tableS3G_CLN_AppropriationLogic.LOB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppropriation_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Appropriation_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppropriation_IDNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Appropriation_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Modified_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTxn_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.Txn_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTxn_IDNull() {
                this[this.tableS3G_CLN_AppropriationLogic.Txn_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMLDetailsNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationLogic.XMLDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMLDetailsNull() {
                this[this.tableS3G_CLN_AppropriationLogic.XMLDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S3G_CLN_AppropriationDetailsRow : global::System.Data.DataRow {
            
            private S3G_CLN_AppropriationDetailsDataTable tableS3G_CLN_AppropriationDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_CLN_AppropriationDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_CLN_AppropriationDetails = ((S3G_CLN_AppropriationDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'S3G_CLN_AppropriationDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Appropriation_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.Appropriation_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Appropriation_ID\' in table \'S3G_CLN_AppropriationDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.Appropriation_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sequence_Number {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.Sequence_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sequence_Number\' in table \'S3G_CLN_AppropriationDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.Sequence_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Due_Type_Code {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.Due_Type_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due_Type_Code\' in table \'S3G_CLN_AppropriationDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.Due_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Due_Type {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.Due_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due_Type\' in table \'S3G_CLN_AppropriationDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.Due_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Percentage {
                get {
                    try {
                        return ((int)(this[this.tableS3G_CLN_AppropriationDetails.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'S3G_CLN_AppropriationDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableS3G_CLN_AppropriationDetails.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableS3G_CLN_AppropriationDetails.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppropriation_IDNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.Appropriation_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppropriation_IDNull() {
                this[this.tableS3G_CLN_AppropriationDetails.Appropriation_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSequence_NumberNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.Sequence_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSequence_NumberNull() {
                this[this.tableS3G_CLN_AppropriationDetails.Sequence_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDue_Type_CodeNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.Due_Type_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDue_Type_CodeNull() {
                this[this.tableS3G_CLN_AppropriationDetails.Due_Type_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDue_TypeNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.Due_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDue_TypeNull() {
                this[this.tableS3G_CLN_AppropriationDetails.Due_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableS3G_CLN_AppropriationDetails.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageNull() {
                this[this.tableS3G_CLN_AppropriationDetails.PercentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S3G_CLN_DebtCollectorMasterRowChangeEvent : global::System.EventArgs {
            
            private S3G_CLN_DebtCollectorMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterRowChangeEvent(S3G_CLN_DebtCollectorMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DebtCollectorMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S3G_CLN_DelinquencyParameterRowChangeEvent : global::System.EventArgs {
            
            private S3G_CLN_DelinquencyParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterRowChangeEvent(S3G_CLN_DelinquencyParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_DelinquencyParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S3G_CLN_AppropriationLogicRowChangeEvent : global::System.EventArgs {
            
            private S3G_CLN_AppropriationLogicRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicRowChangeEvent(S3G_CLN_AppropriationLogicRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationLogicRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S3G_CLN_AppropriationDetailsRowChangeEvent : global::System.EventArgs {
            
            private S3G_CLN_AppropriationDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsRowChangeEvent(S3G_CLN_AppropriationDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_CLN_AppropriationDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace S3GBusEntity.Collection.ClnMasterMgtServicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S3G_CLN_DebtCollectorMasterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public S3G_CLN_DebtCollectorMasterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S3G_CLN_DebtCollectorMaster";
            tableMapping.ColumnMappings.Add("Company_ID", "Company_ID");
            tableMapping.ColumnMappings.Add("LOB_ID", "LOB_ID");
            tableMapping.ColumnMappings.Add("Branch_ID", "Branch_ID");
            tableMapping.ColumnMappings.Add("DebtCollector_Type", "DebtCollector_Type");
            tableMapping.ColumnMappings.Add("DebtCollector_Code", "DebtCollector_Code");
            tableMapping.ColumnMappings.Add("Is_Active", "Is_Active");
            tableMapping.ColumnMappings.Add("Created_By", "Created_By");
            tableMapping.ColumnMappings.Add("Created_On", "Created_On");
            tableMapping.ColumnMappings.Add("Modified_By", "Modified_By");
            tableMapping.ColumnMappings.Add("Modified_On", "Modified_On");
            tableMapping.ColumnMappings.Add("Txn_ID", "Txn_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [S3G_CLN_DebtCollectorMaster] WHERE (([Company_ID] = @Original_Company_ID) AND ([LOB_ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([DebtCollector_Type] = @Original_DebtCollector_Type) AND ([DebtCollector_Code] = @Original_DebtCollector_Code) AND ([Is_Active] = @Original_Is_Active) AND ([Created_By] = @Original_Created_By) AND ([Created_On] = @Original_Created_On) AND ((@IsNull_Modified_By = 1 AND [Modified_By] IS NULL) OR ([Modified_By] = @Original_Modified_By)) AND ((@IsNull_Modified_On = 1 AND [Modified_On] IS NULL) OR ([Modified_On] = @Original_Modified_On)) AND ([Txn_ID] = @Original_Txn_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebtCollector_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebtCollector_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Is_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Txn_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txn_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [S3G_CLN_DebtCollectorMaster] ([Company_ID], [LOB_ID], [Branch_ID], [DebtCollector_Type], [DebtCollector_Code], [Is_Active], [Created_By], [Created_On], [Modified_By], [Modified_On], [Txn_ID]) VALUES (@Company_ID, @LOB_ID, @Branch_ID, @DebtCollector_Type, @DebtCollector_Code, @Is_Active, @Created_By, @Created_On, @Modified_By, @Modified_On, @Txn_ID);
SELECT Company_ID, LOB_ID, Branch_ID, DebtCollector_Type, DebtCollector_Code, Is_Active, Created_By, Created_On, Modified_By, Modified_On, Txn_ID FROM S3G_CLN_DebtCollectorMaster WHERE (DebtCollector_Code = @DebtCollector_Code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebtCollector_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebtCollector_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Is_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Txn_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txn_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [S3G_CLN_DebtCollectorMaster] SET [Company_ID] = @Company_ID, [LOB_ID] = @LOB_ID, [Branch_ID] = @Branch_ID, [DebtCollector_Type] = @DebtCollector_Type, [DebtCollector_Code] = @DebtCollector_Code, [Is_Active] = @Is_Active, [Created_By] = @Created_By, [Created_On] = @Created_On, [Modified_By] = @Modified_By, [Modified_On] = @Modified_On, [Txn_ID] = @Txn_ID WHERE (([Company_ID] = @Original_Company_ID) AND ([LOB_ID] = @Original_LOB_ID) AND ([Branch_ID] = @Original_Branch_ID) AND ([DebtCollector_Type] = @Original_DebtCollector_Type) AND ([DebtCollector_Code] = @Original_DebtCollector_Code) AND ([Is_Active] = @Original_Is_Active) AND ([Created_By] = @Original_Created_By) AND ([Created_On] = @Original_Created_On) AND ((@IsNull_Modified_By = 1 AND [Modified_By] IS NULL) OR ([Modified_By] = @Original_Modified_By)) AND ((@IsNull_Modified_On = 1 AND [Modified_On] IS NULL) OR ([Modified_On] = @Original_Modified_On)) AND ([Txn_ID] = @Original_Txn_ID));
SELECT Company_ID, LOB_ID, Branch_ID, DebtCollector_Type, DebtCollector_Code, Is_Active, Created_By, Created_On, Modified_By, Modified_On, Txn_ID FROM S3G_CLN_DebtCollectorMaster WHERE (DebtCollector_Code = @DebtCollector_Code)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebtCollector_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebtCollector_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Is_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Txn_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txn_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Branch_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Branch_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebtCollector_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebtCollector_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebtCollector_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Is_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_On", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Txn_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txn_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::S3GBusEntity.Properties.Settings.Default.S3GConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Company_ID, LOB_ID, Branch_ID, DebtCollector_Type, DebtCollector_Co" +
                "de, Is_Active, Created_By, Created_On, Modified_By, Modified_On, Txn_ID\r\nFROM   " +
                "         S3G_CLN_DebtCollectorMaster\r\nWHERE        (1 = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClnMasterMgtServices.S3G_CLN_DebtCollectorMasterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClnMasterMgtServices.S3G_CLN_DebtCollectorMasterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClnMasterMgtServices dataSet) {
            return this.Adapter.Update(dataSet, "S3G_CLN_DebtCollectorMaster");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private S3G_CLN_DebtCollectorMasterTableAdapter _s3G_CLN_DebtCollectorMasterTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public S3G_CLN_DebtCollectorMasterTableAdapter S3G_CLN_DebtCollectorMasterTableAdapter {
            get {
                return this._s3G_CLN_DebtCollectorMasterTableAdapter;
            }
            set {
                this._s3G_CLN_DebtCollectorMasterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._s3G_CLN_DebtCollectorMasterTableAdapter != null) 
                            && (this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection != null))) {
                    return this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ClnMasterMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S3G_CLN_DebtCollectorMaster.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s3G_CLN_DebtCollectorMasterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ClnMasterMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S3G_CLN_DebtCollectorMaster.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s3G_CLN_DebtCollectorMasterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ClnMasterMgtServices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S3G_CLN_DebtCollectorMaster.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s3G_CLN_DebtCollectorMasterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ClnMasterMgtServices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._s3G_CLN_DebtCollectorMasterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                    revertConnections.Add(this._s3G_CLN_DebtCollectorMasterTableAdapter, this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection);
                    this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._s3G_CLN_DebtCollectorMasterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._s3G_CLN_DebtCollectorMasterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s3G_CLN_DebtCollectorMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s3G_CLN_DebtCollectorMasterTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._s3G_CLN_DebtCollectorMasterTableAdapter != null)) {
                    this._s3G_CLN_DebtCollectorMasterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._s3G_CLN_DebtCollectorMasterTableAdapter]));
                    this._s3G_CLN_DebtCollectorMasterTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591